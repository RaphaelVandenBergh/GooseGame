name: dotnet Package

on:
  push:
    branches: [ GameOfGoose]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['7.0.x']
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-restore --verbosity normal --configuration Release --logger "trx;LogFileName=TestResults-${{ matrix.dotnet-version }}.trx"
    - name: Upload dotnet test results
      uses: actions/upload-artifact@v3
      with:
        name: TestResults-${{ matrix.dotnet-version }}
        path: TestResults/TestResults-${{ matrix.dotnet-version }}
          # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        platform: linux/amd64
        push: true
        tags: lucius02/goosegameimage:latest
        build-args: |
          DOTNET_VERSION=${{ matrix.dotnet-version }}
        context: .
        file: ./Dockerfile